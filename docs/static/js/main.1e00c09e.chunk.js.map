{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGridd.js","hooks/useFetchGigs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGridd","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGigs","key","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe3C,OACI,0BAAMC,SAXO,SAACC,GACfA,EAAEC,iBAGCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAKjB,mDACG,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAnBa,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,Y,uBCLlBG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEZG,EAFY,gBAGEA,EAAKC,OAHP,uBAGXC,EAHW,EAGXA,KAEDC,EAAKD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACrB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATxB,kBAaXM,GAbW,4CAAF,sDCCPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,yBAAKgB,UAAU,2CACX,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,2BAAIA,KCFHS,EAAW,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECFZ,SAACA,GAAc,IAAD,EAEdd,mBAAS,CAC7BqB,KAAK,GACLe,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAEzBC,EAFyB,KAsBtC,OAfAC,qBAAU,WACN1B,EAAQC,GACP0B,MAAK,SAAAC,GAEEC,YAAW,WACPJ,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,MAEb,UAEZ,CAACtB,IAIGuB,EDlBuBM,CAAa7B,GAA/Ba,EAFwB,EAE7BN,KAAYe,EAFiB,EAEjBA,QAYnB,OACI,oCACA,wBAAIJ,UAAU,sCAAsClB,GACnDsB,GAAW,cACZ,yBAAKJ,UAAU,8CAEHL,EAAOJ,KAAK,SAAAC,GAAG,OAEf,kBAAC,EAAD,eACIoB,IAAKpB,EAAIC,IACLD,UEzBfqB,EAAe,WAAO,IAAD,EAEM7C,mBAAS,CAAC,kBAFhB,mBAEvB8C,EAFuB,KAEX/C,EAFW,KAS9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ+C,EAAWvB,KAAI,SAAAT,GAIX,OAAO,kBAAC,EAAD,CACH8B,IAAK9B,EACLA,SAAUA,UCtBtCiC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.1e00c09e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorias}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n    const handleInputChange= (e)=>{\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handlSubmit=(e)=>{\r\n        e.preventDefault();\r\n        // console.log('Submit realizado');\r\n        \r\n        if(inputValue.trim().length>2){\r\n\r\n            setCategorias(cats => [inputValue,...cats]);    \r\n            setinputValue('');\r\n        }\r\n    }\r\n     return (\r\n         <form onSubmit={handlSubmit}>\r\n         <h2>Agregando Categoria</h2>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n                \r\n\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","\r\nexport const getGifs= async(category)=>{                               //encodeURI reemplaza los espacios por %20 etc\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=R8SIbnO8v5TPIzf6fzpFp0mIo7iVLZ0i`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n    \r\n    const gifs=data.map(img=>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn \">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React,{useState,useEffect} from 'react'\r\nimport React from 'react'\r\nimport { useFetchGigs } from '../hooks/useFetchGigs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGridd = ({category}) => {\r\n    \r\n    const {data:images,loading} = useFetchGigs(category);\r\n  \r\n    /*  const [images, setImages] = useState([]);\r\n    \r\n    useEffect(() => { //Para que se realice una sola peticion\r\n        getGifs(category)\r\n        // .then(img=>setImages(img));\r\n        .then(setImages);\r\n    }, [category]) //warning(agregar category):React Hook useEffect tiene una dependencia faltante: 'categoría'. Inclúyalo o elimine la matriz de dependencia\r\n*/\r\n    \r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn \">{category}</h3>\r\n        {loading && 'Cargando...'}\r\n        <div className=\"card-grid animate__animated animate__flash\">\r\n            {\r\n                    images.map( img => ( \r\n                    \r\n                    <GifGridItem \r\n                        key={img.id} \r\n                        {...img}\r\n                    />\r\n                    ))\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGigs = (category) => {\r\n    \r\n    const [state,setState]= useState({\r\n        data:[],\r\n        loading:true\r\n    }); //carga por defecto la 1°\r\n    \r\n    useEffect(() => { //Para que se realice una sola peticion\r\n        getGifs(category)\r\n        .then(imgs=>\r\n            {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    })\r\n                }, 3000);\r\n            });\r\n    }, [category]) //warning(agregar category):React Hook useEffect tiene una dependencia faltante: 'categoría'. Inclúyalo o elimine la matriz de dependencia\r\n\r\n\r\n   \r\n    return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGridd } from './components/GifGridd';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categorias, setCategorias] = useState(['Dragon Ball Z']);\r\n\r\n    // const handleAdd = ()=>{\r\n    //     // setCategorias([...categorias,'Pokemon']);\r\n    //     setCategorias(categ=>[...categorias,'Pokemon'])\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias}/>\r\n            <hr />\r\n            {/* <button onClick={handleAdd}>Agregar</button> Lo reemplazo por AddCategoty */}\r\n            <ol>\r\n                {\r\n                    categorias.map(category => { \r\n                    // categorias.map((category,i)=>{\r\n                        // return <li >{categorias[i]}</li>\r\n                        // return <li key={category}>{category}</li> reemplazado por GifGridd\r\n                        return <GifGridd \r\n                            key={category}\r\n                            category={category}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}